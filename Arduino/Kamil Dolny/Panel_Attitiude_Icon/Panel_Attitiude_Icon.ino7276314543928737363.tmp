#include "Adafruit_MCP23017.h"

Adafruit_MCP23017 mcp0, mcp1, mcp2, mcp3, mcp4;
byte s = 2;
bool sevenSegmentDisplay[11][12] = {{0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0}, // ZERO
  {0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0}, // JEDEN
  {0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0}, // DWA
  {0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0}, // TRZY
  {0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0}, // CZTERY
  {0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0}, // PIĘĆ
  {0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0}, // SZEŚĆ
  {0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0}, // SIEDEM
  {0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0}, // OSIEM
  {0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0}, // DZIEWIĘĆ
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
}; // NIC
void setup() {
  // put your setup code here, to run once:
  mcp0.begin(0);
  mcp1.begin(1);
  mcp2.begin(2);
  mcp3.begin(3);
  mcp4.begin(4);


  for (byte i = 0; i < 16; i++) {
    mcp0.pinMode(i, OUTPUT);
    mcp0.digitalWrite(i, HIGH);
    mcp1.pinMode(i, OUTPUT);
    mcp1.digitalWrite(i, HIGH);
    mcp2.pinMode(i, OUTPUT);
    mcp2.digitalWrite(i, HIGH);
    mcp3.pinMode(i, OUTPUT);
    mcp4.pinMode(i, OUTPUT);
    mcp3.digitalWrite(i, LOW);
    mcp4.digitalWrite(i, LOW);
  }
  for (byte i = 2; i < 6; i++) {
    pinMode(i, OUTPUT);
    digitalWrite(i, LOW);
  }
  pinMode(A3, INPUT);
  pinMode(A1, INPUT);
  pinMode(A2, INPUT);
  Serial.begin(9600);
  mcp0.digitalWrite(11, LOW);
  //delay(2000);
  displayNumber(mcp0, 9);
  displayNumber(mcp1, 2);
  displayNumber(mcp2, 7);

}
byte barLeds = 0;
byte barLedsPrev = 0;
void loop() {

  displayNumber(mcp0, 9281);
  displayNumber(mcp1, 2000);
  displayNumber(mcp2, 8789);
  barLedsPrev = barLeds;
  barLeds = map(analogRead(A3), 1, 1023, 36, 0);

  if (barLeds > barLedsPrev && barLeds <= 36) {
    setBarLeds(barLeds);
  }
  // put your main code here, to run repeatedly:
  //Serial.println("A0 = " + String(analogRead(A3)) + " A1 = " + String(analogRead(A1)) + " A2 = " + String(analogRead(A2)));



}
void displayNumber(Adafruit_MCP23017 mcp1, int number1, Adafruit_MCP23017 mcp2, int number2, Adafruit_MCP23017 mcp3, int number3) {

  word temp1 = B0, temp2 = B0, temp3 = B0;

  String tempTextNumber[3][4] = {{"", "", "", ""},
                                 {"", "", "", ""},
                                 {"", "", "", ""},
                                 {"", "", "", ""}};
  int tempNumber[3][4];
  
  for (byte j = 0; j < 3; j++) {
    for (byte i = 0; i < 4; i++) {
      tempTextNumber[j][i] = tempTextNumber[i] +  String(number)[i];
      tempNumber[1][i] = tempTextNumber[i].toInt();
    }
  }

  if (number1 < 10) {
    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[number][11 - i]);
    }

    bitWrite(temp, 11, 1);
    mcp.writeGPIOAB(temp);
    delay(s);
    //Serial.println(temp, BIN);
  }
  else if (number >= 10 && number < 100) {

    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[tempNumber[0]][11 - i]);
    }
    bitWrite(temp, 4, 1);
    mcp.writeGPIOAB(temp);
    delay(s);

    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[tempNumber[1]][11 - i]);
    }
    bitWrite(temp, 11, 1);
    mcp.writeGPIOAB(temp);
    delay(s);

  }
  else if (number >= 100 && number < 1000) {
    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[tempNumber[0]][11 - i]);
    }
    bitWrite(temp, 3, 1);
    mcp.writeGPIOAB(temp);
    delay(s);

    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[tempNumber[1]][11 - i]);
    }
    bitWrite(temp, 4, 1);
    mcp.writeGPIOAB(temp);
    delay(s);

    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[tempNumber[2]][11 - i]);
    }
    bitWrite(temp, 11, 1);
    mcp.writeGPIOAB(temp);
    delay(s);

  }
  else {

    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[tempNumber[0]][11 - i]);
    }
    bitWrite(temp, 0, 1);
    mcp.writeGPIOAB(temp);
    delay(s);

    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[tempNumber[1]][11 - i]);
    }
    bitWrite(temp, 3, 1);
    mcp.writeGPIOAB(temp);
    delay(s);
    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[tempNumber[2]][11 - i]);
    }
    bitWrite(temp, 4, 1);
    mcp.writeGPIOAB(temp);
    delay(s);
    for (byte i = 0; i < 12; i++) {
      bitWrite(temp, i, sevenSegmentDisplay[tempNumber[3]][11 - i]);
    }
    bitWrite(temp, 11, 1);
    mcp.writeGPIOAB(temp);
    delay(s);
  }
}

String returnNumberInString(int number){
  String temp="";
  if(number < 10){
    temp = "000" + String(number);
  }
}
void setBarLeds(byte leds) {
  mcp3.writeGPIOAB(0x0);
  mcp4.writeGPIOAB(0x0);
  for (byte i = 2; i < 6; i++) {
    digitalWrite(i, LOW);
  }

  if (leds <= 16) {
    for (byte i = 0; i < leds; i++) {
      mcp3.digitalWrite(i, HIGH);
    }
  }
  else if (leds > 16 && leds <= 32) {
    mcp3.writeGPIOAB(0xffff);
    for (byte i = 0; i < leds - 16; i++) {
      mcp4.digitalWrite(i, HIGH);
    }
  }
  else {
    mcp3.writeGPIOAB(0xffff);
    mcp4.writeGPIOAB(0xffff);
    for (byte i = 0; i < leds - 32; i++) {
      digitalWrite(i + 2, HIGH);
    }
  }
}




